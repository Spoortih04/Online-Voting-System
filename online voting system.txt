#include <stdio.h>
#include <stdlib.h>

#define CANDIDATE_COUNT 3

// Candidate names
char *candidates[CANDIDATE_COUNT] = {
    "1. Alice",
    "2. Bob",
    "3. Charlie"
};

int votes[CANDIDATE_COUNT] = {0}; // vote counters

// Function declarations
void castVote();
void showResults();
void findWinner();

int main() {
    int choice;

    while (1) {
        printf("\n========== Online Voting System ==========\n");
        printf("1. Cast Vote\n");
        printf("2. View Results\n");
        printf("3. Find Winner\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                castVote();
                break;
            case 2:
                showResults();
                break;
            case 3:
                findWinner();
                break;
            case 4:
                printf("Exiting...\n");
                exit(0);
            default:
                printf("Invalid choice. Try again.\n");
        }
    }

    return 0;
}

void castVote() {
    int vote;
    printf("\n----- Cast Your Vote -----\n");
    for (int i = 0; i < CANDIDATE_COUNT; i++) {
        printf("%s\n", candidates[i]);
    }
    printf("Enter candidate number (1-%d): ", CANDIDATE_COUNT);
    scanf("%d", &vote);

    if (vote >= 1 && vote <= CANDIDATE_COUNT) {
        votes[vote - 1]++;
        printf("Thanks for voting!\n");
    } else {
        printf("Invalid vote! Try again.\n");
    }
}

void showResults() {
    printf("\n----- Voting Results -----\n");
    for (int i = 0; i < CANDIDATE_COUNT; i++) {
        printf("%s - %d votes\n", candidates[i], votes[i]);
    }
}

void findWinner() {
    int maxVotes = votes[0], winnerIndex = 0;
    for (int i = 1; i < CANDIDATE_COUNT; i++) {
        if (votes[i] > maxVotes) {
            maxVotes = votes[i];
            winnerIndex = i;
        }
    }
    printf("\nWinner: %s with %d votes\n", candidates[winnerIndex], maxVotes);
}
